<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kekeguo.admin.dao.EntExamArrangeBaseinfoMapper">
    <resultMap id="BaseResultMap" type="com.kekeguo.admin.model.EntExamArrangeBaseinfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="exam_plan_id" property="examPlanId" jdbcType="INTEGER"/>
        <result column="exam_course_id" property="examCourseId" jdbcType="INTEGER"/>
        <result column="register_start" property="registerStart" jdbcType="DATE"/>
        <result column="register_end" property="registerEnd" jdbcType="DATE"/>
        <result column="has_exam" property="hasExam" jdbcType="TINYINT"/>
        <result column="exam_time" property="examTime" jdbcType="DATE"/>
        <result column="period" property="period" jdbcType="CHAR"/>
        <result column="limit_biz_date_start" property="limitBizDateStart" jdbcType="TIMESTAMP"/>
        <result column="limit_biz_date_end" property="limitBizDateEnd" jdbcType="TIMESTAMP"/>
        <result column="weight" property="weight" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="operator" property="operator" jdbcType="VARCHAR"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, exam_plan_id, exam_course_id, register_start, register_end, has_exam, exam_time, 
    period, limit_biz_date_start, limit_biz_date_end, weight, create_time, update_time, 
    operator, delete_flag
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from ent_exam_arrange_baseinfo
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ent_exam_arrange_baseinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.kekeguo.admin.model.EntExamArrangeBaseinfo">
    insert into ent_exam_arrange_baseinfo (id, exam_plan_id, exam_course_id, 
      register_start, register_end, has_exam, 
      exam_time, period, limit_biz_date_start, 
      limit_biz_date_end, weight, create_time, 
      update_time, operator, delete_flag
      )
    values (#{id,jdbcType=INTEGER}, #{examPlanId,jdbcType=INTEGER}, #{examCourseId,jdbcType=INTEGER}, 
      #{registerStart,jdbcType=DATE}, #{registerEnd,jdbcType=DATE}, #{hasExam,jdbcType=TINYINT}, 
      #{examTime,jdbcType=DATE}, #{period,jdbcType=CHAR}, #{limitBizDateStart,jdbcType=TIMESTAMP}, 
      #{limitBizDateEnd,jdbcType=TIMESTAMP}, #{weight,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.kekeguo.admin.model.EntExamArrangeBaseinfo">
        insert into ent_exam_arrange_baseinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="examPlanId != null">
                exam_plan_id,
            </if>
            <if test="examCourseId != null">
                exam_course_id,
            </if>
            <if test="registerStart != null">
                register_start,
            </if>
            <if test="registerEnd != null">
                register_end,
            </if>
            <if test="hasExam != null">
                has_exam,
            </if>
            <if test="examTime != null">
                exam_time,
            </if>
            <if test="period != null">
                period,
            </if>
            <if test="limitBizDateStart != null">
                limit_biz_date_start,
            </if>
            <if test="limitBizDateEnd != null">
                limit_biz_date_end,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="examPlanId != null">
                #{examPlanId,jdbcType=INTEGER},
            </if>
            <if test="examCourseId != null">
                #{examCourseId,jdbcType=INTEGER},
            </if>
            <if test="registerStart != null">
                #{registerStart,jdbcType=DATE},
            </if>
            <if test="registerEnd != null">
                #{registerEnd,jdbcType=DATE},
            </if>
            <if test="hasExam != null">
                #{hasExam,jdbcType=TINYINT},
            </if>
            <if test="examTime != null">
                #{examTime,jdbcType=DATE},
            </if>
            <if test="period != null">
                #{period,jdbcType=CHAR},
            </if>
            <if test="limitBizDateStart != null">
                #{limitBizDateStart,jdbcType=TIMESTAMP},
            </if>
            <if test="limitBizDateEnd != null">
                #{limitBizDateEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.kekeguo.admin.model.EntExamArrangeBaseinfo">
        update ent_exam_arrange_baseinfo
        <set>
            <if test="examPlanId != null">
                exam_plan_id = #{examPlanId,jdbcType=INTEGER},
            </if>
            <if test="examCourseId != null">
                exam_course_id = #{examCourseId,jdbcType=INTEGER},
            </if>
            <if test="registerStart != null">
                register_start = #{registerStart,jdbcType=DATE},
            </if>
            <if test="registerEnd != null">
                register_end = #{registerEnd,jdbcType=DATE},
            </if>
            <if test="hasExam != null">
                has_exam = #{hasExam,jdbcType=TINYINT},
            </if>
            <if test="examTime != null">
                exam_time = #{examTime,jdbcType=DATE},
            </if>
            <if test="period != null">
                period = #{period,jdbcType=CHAR},
            </if>
            <if test="limitBizDateStart != null">
                limit_biz_date_start = #{limitBizDateStart,jdbcType=TIMESTAMP},
            </if>
            <if test="limitBizDateEnd != null">
                limit_biz_date_end = #{limitBizDateEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kekeguo.admin.model.EntExamArrangeBaseinfo">
    update ent_exam_arrange_baseinfo
    set exam_plan_id = #{examPlanId,jdbcType=INTEGER},
      exam_course_id = #{examCourseId,jdbcType=INTEGER},
      register_start = #{registerStart,jdbcType=DATE},
      register_end = #{registerEnd,jdbcType=DATE},
      has_exam = #{hasExam,jdbcType=TINYINT},
      exam_time = #{examTime,jdbcType=DATE},
      period = #{period,jdbcType=CHAR},
      limit_biz_date_start = #{limitBizDateStart,jdbcType=TIMESTAMP},
      limit_biz_date_end = #{limitBizDateEnd,jdbcType=TIMESTAMP},
      weight = #{weight,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getData" resultType="com.kekeguo.admin.model.ExamSessionTempBiz" parameterType="java.lang.String">
    	select e.name as courseName,ee.exam_time as examTime,ee.period as period
        from ent_exam_arrange_baseinfo ee
        inner join ent_exam_course ec on ec.id = ee.exam_course_id
        inner join ent_course e on e.id = ec.course_id
        inner join ent_exam_plan ep on ep.id = ee.exam_plan_id
        inner join ent_proj_2nd ep2 on ep2.id = ep.project2_id
        where ec.area_id = #{area}
        and ep2.name = #{name}
        and ep.exam_session=#{session}
        and e.name=#{courseName}
  </select>
</mapper>